
import static java.lang.Integer.getInteger;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author eljho
 */
public class HacerReserva extends javax.swing.JFrame {

    /**
     * Creates new form HacerReserva
     */
    public HacerReserva() {
        initComponents();
      
         Vector <String> valoresComboBox2 = Login.funcionario.getBd().getColumnValues("cod_ambiente", "ambiente");
        for(int i = 0; i< valoresComboBox2.size(); i++){
            jComboBox2.addItem(valoresComboBox2.elementAt(i));
        }
    }
    public void LlenarComboAsignatura(){
        Vector <String> valoresComboBox = Login.funcionario.getBd().getColumnValues("codigoAsignatura", "asignatura");
        for(int i = 0; i< valoresComboBox.size(); i++){
            jComboBox1.addItem(valoresComboBox.elementAt(i));
        }
    }
    
    public void LlenarComboEvento(){
        Vector <String> valoresComboBox = Login.funcionario.getBd().getColumnValues("codigoEvento", "evento");
        for(int i = 0; i< valoresComboBox.size(); i++){
            jComboBox1.addItem(valoresComboBox.elementAt(i));
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jFormattedTextField4 = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ReservX");

        jLabel3.setText("Fecha de inicio reserva");

        jLabel4.setText("Fecha fin reserva");

        jLabel5.setText("Hora inicio");

        jLabel6.setText("Hora fin");

        jButton1.setText("Reservar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField3ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel7.setText("Ambiente");

        jLabel8.setText("Evento");

        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel9.setText("Info ambiente.");

        jLabel10.setText("Info ");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Asignatura");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Evento");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Seleccione, la actividad de su reserva");

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(61, 61, 61)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField3)
                    .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(173, 173, 173)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox2, 0, 124, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel9)))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9))
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jFormattedTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFormattedTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem() == null || jComboBox2.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "Errorx: No hay ambientes o eventos que seleccionar", "InfoBox", JOptionPane.INFORMATION_MESSAGE);
        }else{
            if(jDateChooser1.getDate() == null || jDateChooser2.getDate() == null || jFormattedTextField3.getText().isEmpty() == true || 
                    jFormattedTextField3.getText().isEmpty() == true || (jRadioButton1.isSelected() == false && jRadioButton2.isSelected() == false)){
                JOptionPane.showMessageDialog(null, "Errorx: Rellene todos los campos, por favor", "InfoBox", JOptionPane.INFORMATION_MESSAGE);
            }else{
                Date date = jDateChooser1.getDate();  
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
                String strDate = dateFormat.format(date);
                boolean SePuede = chocarHora(jFormattedTextField3.getText(), jFormattedTextField4.getText(), strDate, String.valueOf(jComboBox2.getSelectedItem()));
                if(SePuede == false){
                    JOptionPane.showMessageDialog(null, "No se puede realizar la reserva, ya que choca con otra reserva en el mismo ambiente. Eliga otra hora u otro ambiente.", "InfoBox", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    generarCode = new GenCode();
                    String horaInit = jFormattedTextField3.getText();
                    String horaFin = jFormattedTextField4.getText();
                    Date fechaInit = jDateChooser1.getDate(); 
                    Date fechaFin = jDateChooser2.getDate();
                    SimpleDateFormat formato = new SimpleDateFormat ("yyy-MM-dd");
                    String codEvent = (String) jComboBox1.getSelectedItem();
                    String ambiente = (String) jComboBox2.getSelectedItem();
                    String dniF = Integer.toString(Login.funcionario.getDni());
                    String Cod_reserva = generarCode.getCode();
                    if(validarHora(horaInit) && validarHora(horaFin)){
                        reserva = new Reserva(Cod_reserva,formato.format(fechaInit),horaInit,horaFin,formato.format(fechaFin),dniF,codEvent,ambiente);
                        Login.funcionario.makeReserva(reserva);
                        jFormattedTextField3.setText("");
                        jFormattedTextField4.setText("");
                        generarCode.AddCode();
                    }else{
                       JOptionPane.showMessageDialog(null, "Errorx:hora invalida ", "InfoBox" , JOptionPane.INFORMATION_MESSAGE);
                    }
                    jFormattedTextField3.setText("");
                    jFormattedTextField4.setText("");
                    jDateChooser1.cleanup();
                    jDateChooser2.cleanup();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jLabel8.setText("Asignatura");
        jComboBox1.removeAllItems();
        LlenarComboAsignatura();
        jComboBox1.setEnabled(true);
        jLabel10.setText("Info asignatura:");
        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jLabel8.setText("Evento");
        jComboBox1.removeAllItems();
        LlenarComboEvento();
        jComboBox1.setEnabled(true);
        jLabel10.setText("Info evento:");
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
        String columnas;
        if (jLabel8.getText().equals("Evento")){
            columnas = "tipo,nombre"; 
        }else{
            columnas ="codigoasignatura,nombre";
        }
        String x = (String) jComboBox1.getSelectedItem();
        String result = Login.usuario.getBd().getAllofTablasJoinnedWhere(jLabel8.getText(), "actividad", columnas, "codigo"+jLabel8.getText(),"codigoactividad", "codigo"+jLabel8.getText(), x);
        jTextArea1.setText(result);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText("");
        String columnas = "ambiente.nombre,capacidad,area,sede.nombre,sede.direccion";
        String codigo = (String) jComboBox2.getSelectedItem();
        String result = Login.usuario.getBd().getAllofTablasJoinnedWhere("ambiente", "sede",columnas, "num_sede", "num_sede", "cod_ambiente","'"+codigo+"'");
        jTextArea2.setText(result);
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        DashboardFuncionario.main();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField3ActionPerformed

    private boolean validarHora(String hora){
        boolean b;
        char[] a = hora.toString().toCharArray();
        String[] c = hora.split(":");
        if ((a[0] == ' ') || (a[1] == ' ') || (a[2] == ' ') 
                || (a[3] == ' ') || (a[4] == ' ') 
                || (getInt(c[0]) > 24) || (getInt(c[1]) > 59)) {
            b = false;
        }else{
            b = true;
        }
        return b;
    }
    
    private boolean chocarHora(String horaI, String horaF, String dia, String ambiente){
        
        Vector <String[]> horasminutosI = new Vector();
        Vector <String[]> horasminutosF = new Vector();
        String[] chI = horaI.split(":");
        String[] chF = horaF.split(":");
        
        Vector <String> ValoresHoraI = Login.usuario.getBd().getColumnValuesWhere("hora_inicio", "reserva", "fecha_inicio = '" + dia + "' AND codigoambiente", "'" + ambiente + "'");
        Vector <String> ValoresHoraF = Login.usuario.getBd().getColumnValuesWhere("hora_fin", "reserva", "fecha_inicio = '" + dia + "' AND codigoambiente", "'" + ambiente + "'");
        
        
        
        for(int i=0; i<ValoresHoraI.size();i++){
           String[] cI = ValoresHoraI.elementAt(i).split(":");
           horasminutosI.addElement(cI);
        }
        
        for(int i=0; i<ValoresHoraF.size();i++){
           String[] cF = ValoresHoraF.elementAt(i).split(":");
           horasminutosF.addElement(cF);
        }

        for(int i=0; i<horasminutosI.size(); i++){
            if(getInt(horasminutosI.elementAt(i)[0]) < getInt(chI[0]) && getInt(chI[0]) < getInt(horasminutosF.elementAt(i)[0])){ //Revisa si hay una reserva de 14:xx a 16:xx
                                                                                                                                   // y se hace una reserva desde las 15:xx
                return false;
            }else if(getInt(horasminutosI.elementAt(i)[0]) == getInt(chI[0])){  //Revisa si hay una reserva que empieza a las 14:xx y se hace una reserva desde las 14:xx
                if(getInt(horasminutosF.elementAt(i)[0]) > getInt(chI[0])){ //Revisa si hay una reserva que termina a las 15:xx y se hace una reserva desde las 14:xx
                    return false;
                }else if(getInt(horasminutosF.elementAt(i)[0]) == getInt(chI[0])){ //Revisa si hay una reserva que empieza y 
                                                                                    // termina a las 14:xx y se hace una reserva desde las 14:xx
                    if(getInt(horasminutosI.elementAt(i)[1]) <= getInt(chI[1]) && 
                            getInt(chI[1]) <= getInt(horasminutosF.elementAt(i)[1])){  //Revisa los minutos para la condición anterior
                        return false;
                    }
                }
            }else if(getInt(horasminutosI.elementAt(i)[0]) <= getInt(chF[0]) && getInt(chF[0]) < getInt(horasminutosF.elementAt(i)[0])){
                return false;
            }else if(getInt(horasminutosI.elementAt(i)[0]) == getInt(chF[0]) && getInt(horasminutosF.elementAt(i)[0]) == getInt(chF[0])){
                if(getInt(horasminutosI.elementAt(i)[1]) <= getInt(chF[1]) && 
                            getInt(chF[1]) <= getInt(horasminutosF.elementAt(i)[1])){  //Revisa los minutos para la condición anterior
                        return false;
                    }
            }
        }
        return true;
    }
    
    private boolean chocarHora(String horaI, String horaF, String dia){
        
        Vector <String[]> horasminutosI = new Vector();
        Vector <String[]> horasminutosF = new Vector();
        String[] chI = horaI.split(":");
        String[] chF = horaF.split(":");
        
        Vector <String> ValoresHoraI = Login.usuario.getBd().getColumnValuesWhere("hora_inicio", "reserva", "fecha_inicio", dia);
        Vector <String> ValoresHoraF = Login.usuario.getBd().getColumnValuesWhere("hora_fin", "reserva", "fecha_fin", dia);
        
        for(int i=0; i<ValoresHoraI.size();i++){
           String[] cI = ValoresHoraI.elementAt(i).split(":");
           horasminutosI.addElement(cI);
        }
        
        for(int i=0; i<ValoresHoraF.size();i++){
           String[] cF = ValoresHoraF.elementAt(i).split(":");
           horasminutosF.addElement(cF);
        }
        
        for(int i=0; i<horasminutosI.size(); i++){
            if(getInt(horasminutosI.elementAt(i)[0]) < getInt(chI[0]) && getInt(chI[0]) < getInt(horasminutosF.elementAt(i)[0])){
                return false;
            }else if(getInt(horasminutosI.elementAt(i)[0]) == getInt(chI[0])){
                
            }
        };
        
        
        return true;
    };
    
    private int getInt(String valor){
        int integer = Integer.parseInt(valor);
        return integer;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HacerReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HacerReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HacerReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HacerReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HacerReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JFormattedTextField jFormattedTextField4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
    private Reserva reserva;
    private GenCode generarCode;
}
